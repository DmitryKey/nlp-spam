#! /usr/bin/env ruby
#
# Save MySQL records as plain text files for easier portability
#

require 'sequel'
require 'fileutils'
require 'pathname'
require 'parallel'

require_relative '../lib/cleaner'
require_relative '../lib/extensions'

# Returns an SQL query to fetch all users by a status (0 = active, 6 = spam)
# before a certain date.
def user_sql(status, date="2012-11-28")
  <<EOF
SELECT users.masterid, users.special_text
FROM users
WHERE users.status = #{status}
  AND users.timestamp <= "#{date}"
ORDER BY RAND()
EOF
end

# Deletes and creates a directory
def create_dir(name)
  FileUtils.rm_rf name
  FileUtils.mkdir_p name
  name
end

def create_dirs(list)
  list.each { |d| create_dir(d) }
end

def process(dbh, base_dir, test_limit, min_chars)
  {:ham => 0, :spam => 6}.each do |klass, status|
    train_dir = create_dir("#{base_dir}/processed/#{klass}")

    Parallel.map(dbh[user_sql(status)], :in_threads => 200) do |row|
      filename = row[:masterid] + '.html'
      body = Cleaner.clean_html(row[:special_text].force_encoding('utf-8'))
      next if body.to_words.size == 0

      dir = train_dir
      File.open(File.join(dir, filename), 'w') { |f| f.puts body }
    end
  end
end

if $0 == __FILE__
  abort "Usage: #{File.basename(__FILE__)} DATABASE DATA_DIR" if ARGV.size != 2
  name = ARGV.shift
  data_dir = Pathname(File.expand_path(ARGV.shift))

  process(Sequel.connect("mysql://root@localhost/#{name}"), data_dir, 100, 0)
end
